directive @auth(enabled: Boolean!) on FIELD_DEFINITION

directive @validate(tag: String!) on INPUT_FIELD_DEFINITION

directive @goTag(
	key: String!
	value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goField(
	name: String
	type: String
	omittable: Boolean
	forceResolver: Boolean
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goExtraField(
	name: String
	type: String!
	description: String
	overrideTags: String
) repeatable on OBJECT | INPUT_OBJECT

scalar ULID
scalar Timestamp

enum CategoryType {
	INCOME
	EXPENSE
}

type Account
	@goExtraField(
		name: "Passhash"
		type: "string"
		overrideTags: "json:\"passhash\""
	)
{
	id: ID!
	gid: ID! @goField(name: "GroupID") @goTag(key: "json", value: "group_id")
	email: String!
	fullname: String!

	group: Group! @goField(forceResolver: true)
	summary: AccountSummary! @goField(forceResolver: true)
}

type AccountSummary {
	balance: Float!
	income: Float!
	expense: Float!
}

type Group {
	id: ID!
}

type Category {
	id: ULID!
	gid: ID! @goField(name: "GroupID") @goTag(key: "json", value: "group_id")
	name: String!
	type: CategoryType!
	emoji: String!
	color: String!

	group: Group! @goField(forceResolver: true)
	transactions: [Transaction!]! @goField(forceResolver: true)
}

type Transaction {
	id: ULID!
	cid: ULID!
		@goField(name: "CategoryID")
		@goTag(key: "json", value: "category_id")
	aid: ID! @goField(name: "AccountID") @goTag(key: "json", value: "account_id")
	title: String!
	amount: Float!
	timestamp: Timestamp!

	category: Category! @goField(forceResolver: true)
	account: Account! @goField(forceResolver: true)
}

type Query {
	account: Account! @auth(enabled: true)
	category(id: ULID!): Category! @auth(enabled: true)
	categories(ct: CategoryType): [Category!]! @auth(enabled: true)
	transaction(id: ULID!): Transaction! @auth(enabled: true)
	transactions(ct: CategoryType): [Transaction!]! @auth(enabled: true)
}

input CreateAccount {
	email: String! @validate(tag: "required,email")
	password: String! @validate(tag: "required,min=8,max=30")
	fullname: String! @validate(tag: "required,max=30,printascii")
}

input CreateCategory {
	name: String! @validate(tag: "required,max=20,printascii")
	type: CategoryType! @validate(tag: "required,oneof=INCOME EXPENSE")
	emoji: String! @validate(tag: "required,min=1,max=4") # TODO: need stricter validation
	color: String! @validate(tag: "required,hexcolor")
}

input CreateTransaction {
	cid: ULID! @validate(tag: "required,ulid") @goField(name: "CategoryID")
	title: String! @validate(tag: "required,max=30")
	amount: Float! @validate(tag: "required,gt=0")
	timestamp: Timestamp! @validate(tag: "required")
}

type Mutation {
	createAccount(a: CreateAccount!): Account! @auth(enabled: false)
	createCategory(c: CreateCategory!): Category! @auth(enabled: true)
	createTransaction(t: CreateTransaction!): Transaction! @auth(enabled: true)
}
