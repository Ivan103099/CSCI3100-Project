scalar ULID
scalar Timestamp

directive @auth(enabled: Boolean!) on FIELD_DEFINITION

directive @validate(tag: String!) on INPUT_FIELD_DEFINITION

directive @goField(
	name: String
	type: String
	omittable: Boolean
	forceResolver: Boolean
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goModel(
	model: String
	models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goEnum(value: String) on ENUM_VALUE

enum CategoryType @goModel(model: "finawise.app/server/models.CategoryType") {
	INCOME @goEnum(value: "finawise.app/server/models.CategoryTypeIncome")
	EXPENSE @goEnum(value: "finawise.app/server/models.CategoryTypeExpense")
}

type Account {
	id: ID!
	email: String!
	fullname: String!

	summary: AccountSummary!
}

type AccountSummary {
	income: Float!
	expense: Float!
}

type Category {
	id: ULID!
	name: String!
	type: CategoryType!
	emoji: String!
	color: String!

	budget: Budget
	transactions: [Transaction!]!
}

type Transaction {
	id: ULID!
	title: String!
	amount: Float!
	timestamp: Timestamp!

	category: Category!
}

type Budget {
	amount: Float!

	category: Category!
}

type Query {
	account: Account! @auth(enabled: true)
	category(id: ULID!): Category! @auth(enabled: true)
	categories(ct: CategoryType): [Category!]! @auth(enabled: true)
	transaction(id: ULID!): Transaction! @auth(enabled: true)
	transactions(ct: CategoryType): [Transaction!]! @auth(enabled: true)
	budget(cid: ULID!): Budget! @auth(enabled: true)
	budgets: [Budget!]! @auth(enabled: true)
}

input CreateAccount {
	email: String! @validate(tag: "required,email")
	password: String! @validate(tag: "required,min=8,max=30")
	fullname: String! @validate(tag: "required,max=30,printascii")
}

input CreateCategory {
	name: String! @validate(tag: "required,max=20,printascii")
	type: CategoryType! @validate(tag: "required,oneof=INCOME EXPENSE")
	emoji: String! @validate(tag: "required,min=1,max=4") # TODO: need stricter validation
	color: String! @validate(tag: "required,hexcolor")
}

input CreateTransaction {
	cid: ULID! @validate(tag: "required,ulid") @goField(name: "CategoryID")
	title: String! @validate(tag: "required,max=30")
	amount: Float! @validate(tag: "required,gt=0")
	timestamp: Timestamp! @validate(tag: "required")
}

input CreateBudget {
	cid: ULID! @validate(tag: "required,ulid") @goField(name: "CategoryID")
	amount: Float! @validate(tag: "required,gt=0")
}

type Mutation {
	createAccount(a: CreateAccount!): Account! @auth(enabled: false)
	createCategory(c: CreateCategory!): Category! @auth(enabled: true)
	createTransaction(t: CreateTransaction!): Transaction! @auth(enabled: true)
	createBudget(b: CreateBudget!): Budget! @auth(enabled: true)
}
